# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['develop']
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.10.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
             
      - name: Login Dockerhub
        env:
            DOCKER_USERNAME: ${{secrets.DOCKER_HUB_USERNAME}}
            DOCKER_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
            MAJOR_TAG: ${{ secrets.FRONTEND_MAJOR }}
            MINOR_TAG: ${{ secrets.FRONTEND_MINOR }}
            TAG: ${{ secrets.FRONTEND_MAJOR }}${{ secrets.FRONTEND_MINOR }}
       
      - name: Debugging
        run: |
          echo "DOCKER_USERNAME: $DOCKER_USERNAME"
          echo "DOCKER_PASSWORD: $DOCKER_PASSWORD"
          echo "MAJOR_TAG: $MAJOR_TAG"
          echo "MINOR_TAG: $MINOR_TAG"
          echo "TAG: $TAG"
          echo "Checking if $TAG is set properly"
          if [ -z "$TAG" ]; then
            echo "TAG is empty or not set."
          else
            echo "TAG is set to: $TAG"
          fi    
      - name log
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Build the Docker image
        run: docker-compose build
      - name: Tagin frontend with version
        run: docker tag klockan-frontend:${TAG} klockan/frontend:${TAG}    
      - name: Push to docker hub
        run: docker push klockan/frontend:${TAG}
      - name: Tagin frontend with latest
        run: docker tag klockan-frontend:latest klockan/frontend:latest
      - name: Push to docker hub
        run: docker push klockan/frontend:latest 



